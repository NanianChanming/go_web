package session

/*
session的基本原理是由服务器为每个会话维护一份信息数据，客户端和服务端依靠一个全局唯一的标识来访问这份数据，以达到交互的目的。
当用户访问Web应用时，服务端程序会随需要创建session，这个过程可以概括为三个步骤：
1.生成全局唯一标识符（sessionid）
2.开辟数据存储空间。一般会在内存中创建相应的数据结构。
3.将session的全局唯一标识符发送给客户端。
以上步骤中，最关键的是如何发送session的唯一标识这一步，考虑到http协议的定义，数据无非可以放到请求行、请求头或body里，
所以一般来说会有两种常用的方式，cookie和url重写
1.cookie
服务端通过设置Set-cookie头就可以将session的标识符传送到客户端，而客户端此后的每一次请求都会带上这个标识符，
另外一般包含session信息的cookie会将失效时间设置为0，即浏览器进程有效时间。
2.URL重写
所谓url重写，就是在返回给用户的页面里的所有的url后面追加session标识符，这样用户在收到响应后，无论点击页面哪里的链接或者提交表单，
都会带上session标识符，从而实现全会话保持。
虽然这种做法比较麻烦，但是如果客户端禁用了cookie的话，此种方案将会是首选。
*/
